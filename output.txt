===============================
ðŸ“˜ SPRING CORE â€“ LIBRARY OUTPUT
===============================

-- Exercise 1 to 4: XML Configuration --
Author [id=1, name=John Doe]
Book [id=101, title=Spring in Action, price=500.0, author=Author [id=1, name=John Doe]]

-- Exercise 5 to 6: Annotation Configuration --
Author [id=2, name=Jane Austen]
Book [id=102, title=Pride and Prejudice, price=300.0, author=Author [id=2, name=Jane Austen]]

-- Exercise 7: Setter Injection using Annotation --
Author [id=3, name=Mark Twain]
Book [id=103, title=Adventures of Huckleberry Finn, price=350.0, author=Author [id=3, name=Mark Twain]]

-- Exercise 8: AOP Logging --
[Before] Method call: getAllBooks()
Book list retrieved from the system
[After] Method call: getAllBooks()


======================================
ðŸš€ SPRING BOOT â€“ LIBRARY BOOT OUTPUT
======================================

-- GET /books --
[
  {
    "id": 1,
    "title": "Clean Code",
    "price": 450.0,
    "author": {
      "id": 1,
      "name": "Robert C. Martin"
    }
  },
  {
    "id": 2,
    "title": "Effective Java",
    "price": 550.0,
    "author": {
      "id": 2,
      "name": "Joshua Bloch"
    }
  }
]

-- GET /books/1 --
{
  "id": 1,
  "title": "Clean Code",
  "price": 450.0,
  "author": {
    "id": 1,
    "name": "Robert C. Martin"
  }
}

-- POST /books --
Request:
{
  "id": 3,
  "title": "Java Concurrency in Practice",
  "price": 600.0,
  "author": {
    "id": 3,
    "name": "Brian Goetz"
  }
}
Response:
âœ… Book added successfully

-- PUT /books/3 --
Request:
{
  "title": "Java Concurrency in Practice - Updated",
  "price": 650.0
}
Response:
âœ… Book with ID 3 updated

-- DELETE /books/3 --
âœ… Book with ID 3 deleted
